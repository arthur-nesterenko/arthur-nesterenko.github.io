{"version":3,"sources":["webpack:///./src/components/content.jsx","webpack:///./src/pages/index.js","webpack:///./src/components/social-link-list/styled-social-link-list.jsx","webpack:///./src/components/social-link-list/styled-social-link-item.jsx","webpack:///./src/components/social-link-list/index.jsx"],"names":["Content","p","theme","colors","darkContent","defaultProps","propTypes","PropTypes","bool","StyledWrapper","css","breakpoints","tablet","title","props","white","mq","textAlign","homeQuery","IndexPage","page","data","authorTwitterAccount","useSiteMetadata","withHeader","href","frontmatter","dangerouslySetInnerHTML","__html","html","StyledSocialLinkList","StyledSocialLintItem","iconTheme","dark","SocialLinkList","authorSocialLinks","map","social","key","name","url","concat","nickname","target","createElement","require","size"],"mappings":"kIAGMA,EAAO,mDAEA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOF,EAAEG,YAAc,OAAS,WAF7C,2CAQbJ,EAAQK,aAAe,CACrBD,aAAa,GAGfJ,EAAQM,UAAY,CAClBF,YAAaG,IAAUC,MAGVR,O,+MCPTS,EAAa,4EAGf,SAAAR,GACA,OAAOS,WAAD,CAAN,wEAMIT,EAAEC,MAAMS,YAAYC,OANxB,oIAJe,+CAuBbC,EAAQ,SAAAC,GAAK,OAAIJ,WAAJ,UACRI,EAAMX,OAAOY,MADL,wCAIfD,EAAMH,YAAYK,GAAG,CACrBC,UAAW,CAAC,SAAU,YA6BbC,EAAS,aAWPC,UApCG,SAAC,GAAwB,IAAdC,EAAa,EAArBC,KAAQD,KACnBE,EAAyBC,cAAzBD,qBACR,OACE,YAAC,IAAD,CAAYE,YAAY,GACtB,YAAC,IAAD,CAAKX,MAAM,SACX,YAACJ,EAAD,KACE,uBACE,iBAAGgB,KAAI,uBAAyBH,GAC9B,YAAC,IAAD,QAGJ,uBACE,kBAAIZ,IAAKG,GAAQO,EAAKM,YAAYb,OAClC,YAAC,IAAD,CACET,aAAa,EACbuB,wBAAyB,CAAEC,OAAQR,EAAKS,SAG5C,YAAC,IAAD,MACA,YAAC,IAAD,U,wECjDOC,EAZW,+OCiBXC,EAjBW,2EAGb,SAAA9B,GAAC,MACQ,SAAhBA,EAAE+B,UAAuB/B,EAAEC,MAAMC,OAAO8B,KAAOhC,EAAEC,MAAMC,OAAOY,QAJ1C,wG,wBCgBpBmB,EAAiB,SAAC,GAAmB,IAAjBF,EAAgB,EAAhBA,UAChBG,EAAsBZ,cAAtBY,kBAER,OACE,YAAC,EAAD,KACGA,EAAkBC,KAAI,SAAAC,GAAM,OAC3B,YAAC,EAAD,CAAqBC,IAAKD,EAAOE,KAAMP,UAAWA,GAChD,iBAAGP,KAAMY,EAAOG,IAAIC,OAAOJ,EAAOK,UAAWC,OAAO,UACjDC,yBAfGL,EAemB,KAAKF,EAAOE,KAfvBM,EAAQ,QAAkBN,IAeM,CAAEO,KAAM,OAfhD,IAAAP,OAuBhBL,EAAe7B,aAAe,CAC5B2B,UAAW,SAOEE","file":"component---src-pages-index-js-d8d35db295ecc358eab2.js","sourcesContent":["import PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst Content = styled.div`\n  p {\n    color: ${p => p.theme.colors[p.darkContent ? 'dark' : 'white']};\n    padding: 10px 0;\n    margin-bottom: 1.45rem;\n  }\n`;\n\nContent.defaultProps = {\n  darkContent: true,\n};\n\nContent.propTypes = {\n  darkContent: PropTypes.bool,\n};\n\nexport default Content;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PageLayout from '@/layouts/page-layout';\nimport Avatar from '@/components/avatar';\nimport Navigation from '@/components/navigation';\nimport StyledSocialLinkList from '@/components/social-link-list';\nimport Content from '@/components/content';\nimport useSiteMetadata from '@/hooks/use-site-metadata';\nimport Seo from '@/components/seo';\nimport { css } from '@emotion/core';\nimport { graphql } from 'gatsby';\n\nconst StyledWrapper = styled.section`\n  max-width: 820px;\n  margin: auto;\n  ${p => {\n    return css`\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      padding: 0 14px;\n\n      ${p.theme.breakpoints.tablet} {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        grid-template-rows: repeat(2 min-content);\n        grid-gap: 50px;\n        grid-row-gap: 10px;\n      }\n    `;\n  }};\n  justify-content: center;\n  align-items: center;\n`;\n\nconst title = props => css`\n  color: ${props.colors.white};\n  font-size: 1.5rem;\n  margin-bottom: 15px;\n  ${props.breakpoints.mq({\n    textAlign: ['center', 'left'],\n  })}\n`;\n\nconst IndexPage = ({ data: { page } }) => {\n  const { authorTwitterAccount } = useSiteMetadata();\n  return (\n    <PageLayout withHeader={false}>\n      <Seo title=\"Home\" />\n      <StyledWrapper>\n        <div>\n          <a href={`https://twitter.com/${authorTwitterAccount}`}>\n            <Avatar />\n          </a>\n        </div>\n        <div>\n          <h1 css={title}>{page.frontmatter.title}</h1>\n          <Content\n            darkContent={false}\n            dangerouslySetInnerHTML={{ __html: page.html }}\n          />\n        </div>\n        <StyledSocialLinkList />\n        <Navigation />\n      </StyledWrapper>\n    </PageLayout>\n  );\n};\n\nexport const homeQuery = graphql`\n  query QueryHome {\n    page: markdownRemark(fields: { directoryName: { eq: \"home\" } }) {\n      frontmatter {\n        title\n      }\n      html\n    }\n  }\n`;\n\nexport default IndexPage;\n","import styled from '@emotion/styled';\n\nconst StyledSocialLinkList = styled.ul`\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  grid-gap: 5px;\n  grid-template-columns: repeat(auto-fit, minmax(24px, 35px));\n  list-style: none;\n  margin: 0;\n  color: white;\n  width: 100%;\n`;\n\nexport default StyledSocialLinkList;\n","import styled from '@emotion/styled';\n\nconst StyledSocialLintItem = styled.li`\n  a {\n    transform: rotate(10deg);\n    color: ${p =>\n      p.iconTheme === 'dark' ? p.theme.colors.dark : p.theme.colors.white};\n    transition: 0.7s;\n  }\n  svg {\n    transition: 0.7s;\n    &:hover {\n      transition: 0.7s;\n      cursor: pointer;\n      transform: scale(1.5);\n    }\n  }\n`;\n\nexport default StyledSocialLintItem;\n","import PropTypes from 'prop-types';\nimport React, { createElement } from 'react';\nimport StyledSocialLinkList from './styled-social-link-list';\nimport StyledSocialLinItem from './styled-social-link-item';\nimport useSiteMetadata from '@/hooks/use-site-metadata';\n\n/**\n *\n * @param name\n * @returns {*}\n */\nconst getIcon = name => require('react-icons/fa')[name];\n/**\n *\n * @param iconTheme\n * @returns {*}\n * @constructor\n */\nconst SocialLinkList = ({ iconTheme }) => {\n  const { authorSocialLinks } = useSiteMetadata();\n\n  return (\n    <StyledSocialLinkList>\n      {authorSocialLinks.map(social => (\n        <StyledSocialLinItem key={social.name} iconTheme={iconTheme}>\n          <a href={social.url.concat(social.nickname)} target=\"_blank\">\n            {createElement(getIcon(`Fa${social.name}`), { size: 24 })}\n          </a>\n        </StyledSocialLinItem>\n      ))}\n    </StyledSocialLinkList>\n  );\n};\n\nSocialLinkList.defaultProps = {\n  iconTheme: 'light',\n};\n\nSocialLinkList.propTypes = {\n  iconTheme: PropTypes.oneOf(['dark', 'light']),\n};\n\nexport default SocialLinkList;\n"],"sourceRoot":""}