{"version":3,"sources":["webpack:///./src/components/divider.jsx","webpack:///./src/pages/about.js","webpack:///./src/components/content.jsx","webpack:///./src/components/heading.jsx","webpack:///./src/components/social-link-list/styled-social-link-list.jsx","webpack:///./src/components/social-link-list/styled-social-link-item.jsx","webpack:///./src/components/social-link-list/index.jsx"],"names":["Divider","p","theme","colors","primary","skillList","props","css","aboutQuery","AboutPage","page","data","layout","as","title","frontmatter","variant","subTitle","dangerouslySetInnerHTML","__html","html","iconTheme","Content","darkContent","defaultProps","propTypes","PropTypes","bool","Heading","heading","oneOf","StyledSocialLinkList","StyledSocialLintItem","dark","white","SocialLinkList","authorSocialLinks","useSiteMetadata","map","social","key","name","href","url","concat","nickname","target","createElement","require","size"],"mappings":"sMAUeA,EARF,4DACS,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,UAD7B,yD,YCFb,2CAWA,IAAMC,EAAY,SAAAC,GAAK,OAAIC,WAAJ,8EAUZD,EAAMH,OAAOC,QAVD,0EAyCVI,EAAU,aAWRC,UAjCG,SAAC,GAAD,IAAWC,EAAX,EAAGC,KAAQD,KAAX,OAChB,YAAC,IAAD,CAAYE,OAAO,SACjB,YAAC,IAAD,CAAWC,GAAG,WACZ,YAAC,IAAD,CAAKC,MAAM,UACX,0BACE,YAAC,IAAD,KAAUJ,EAAKK,YAAYD,OAC3B,YAAC,IAAD,CAASD,GAAG,KAAKG,QAAQ,aACtBN,EAAKK,YAAYE,WAGtB,YAAC,IAAD,CACEV,IAAKF,EACLa,wBAAyB,CAAEC,OAAQT,EAAKU,QAE1C,YAAC,EAAD,MACA,0BACE,YAAC,IAAD,CAAgBC,UAAU,c,yEC3C5BC,EAAO,mDAEA,SAAArB,GAAC,OAAIA,EAAEC,MAAMC,OAAOF,EAAEsB,YAAc,OAAS,WAF7C,2CAQbD,EAAQE,aAAe,CACrBD,aAAa,GAGfD,EAAQG,UAAY,CAClBF,YAAaG,IAAUC,MAGVL,O,mFCfTM,EAAO,uCACT,SAAA3B,GAAC,OAAIM,WAAJ,CAAQN,EAAEC,MAAM2B,QAAQ5B,EAAEe,YADlB,KAIbY,EAAQJ,aAAe,CACrBR,QAAS,QAEXY,EAAQH,UAAY,CAClBT,QAASU,IAAUI,MAAM,CAAC,UAAW,YAAa,UAGrCF,O,wECDAG,EAZW,+OCiBXC,EAjBW,2EAGb,SAAA/B,GAAC,MACQ,SAAhBA,EAAEoB,UAAuBpB,EAAEC,MAAMC,OAAO8B,KAAOhC,EAAEC,MAAMC,OAAO+B,QAJ1C,wG,wBCgBpBC,EAAiB,SAAC,GAAmB,IAAjBd,EAAgB,EAAhBA,UAChBe,EAAsBC,cAAtBD,kBAER,OACE,YAAC,EAAD,KACGA,EAAkBE,KAAI,SAAAC,GAAM,OAC3B,YAAC,EAAD,CAAqBC,IAAKD,EAAOE,KAAMpB,UAAWA,GAChD,iBAAGqB,KAAMH,EAAOI,IAAIC,OAAOL,EAAOM,UAAWC,OAAO,UACjDC,yBAfGN,EAemB,KAAKF,EAAOE,KAfvBO,EAAQ,QAAkBP,IAeM,CAAEQ,KAAM,OAfhD,IAAAR,OAuBhBN,EAAeX,aAAe,CAC5BH,UAAW,SAOEc","file":"component---src-pages-about-js-3317e8d5fff5d86588c5.js","sourcesContent":["import styled from '@emotion/styled';\n\nconst Divider = styled.hr`\n  background-color: ${p => p.theme.colors.primary};\n  height: 1px;\n  border: none;\n  opacity: 0.3;\n  margin: 1.45rem 0;\n`;\n\nexport default Divider;\n","import React from 'react';\nimport Seo from '../components/seo';\nimport PageLayout from '@/layouts/page-layout';\nimport Container from '@/components/container';\nimport Content from '@/components/content';\nimport Heading from '@/components/heading';\nimport SocialLinkList from '@/components/social-link-list';\nimport Divider from '@/components/divider';\nimport { css } from '@emotion/core';\nimport { graphql } from 'gatsby';\n\nconst skillList = props => css`\n  .skills {\n    h5 {\n      margin: 0;\n    }\n    ul {\n      margin: 15px 0;\n      li {\n        &::before {\n  content: \"\\\\2022\";  \n  color: ${props.colors.primary};\n  font-weight: bold; \n  display: inline-block;\n  width: 1em;\n  margin-left: -1em; \n      }\n    }\n  }\n`;\nconst AboutPage = ({ data: { page } }) => (\n  <PageLayout layout=\"white\">\n    <Container as=\"article\">\n      <Seo title=\"About\" />\n      <header>\n        <Heading>{page.frontmatter.title}</Heading>\n        <Heading as=\"h2\" variant=\"secondary\">\n          {page.frontmatter.subTitle}\n        </Heading>\n      </header>\n      <Content\n        css={skillList}\n        dangerouslySetInnerHTML={{ __html: page.html }}\n      />\n      <Divider />\n      <footer>\n        <SocialLinkList iconTheme=\"dark\" />\n      </footer>\n    </Container>\n  </PageLayout>\n);\n\nexport const aboutQuery = graphql`\n  query QueryAbout {\n    page: markdownRemark(fields: { directoryName: { eq: \"about\" } }) {\n      frontmatter {\n        title\n      }\n      html\n    }\n  }\n`;\n\nexport default AboutPage;\n","import PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst Content = styled.div`\n  p {\n    color: ${p => p.theme.colors[p.darkContent ? 'dark' : 'white']};\n    padding: 10px 0;\n    margin-bottom: 1.45rem;\n  }\n`;\n\nContent.defaultProps = {\n  darkContent: true,\n};\n\nContent.propTypes = {\n  darkContent: PropTypes.bool,\n};\n\nexport default Content;\n","import PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nconst Heading = styled.h1`\n  ${p => css(p.theme.heading[p.variant])};\n`;\n\nHeading.defaultProps = {\n  variant: 'dark',\n};\nHeading.propTypes = {\n  variant: PropTypes.oneOf(['primary', 'secondary', 'dark']),\n};\n\nexport default Heading;\n","import styled from '@emotion/styled';\n\nconst StyledSocialLinkList = styled.ul`\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  grid-gap: 5px;\n  grid-template-columns: repeat(auto-fit, minmax(24px, 35px));\n  list-style: none;\n  margin: 0;\n  color: white;\n  width: 100%;\n`;\n\nexport default StyledSocialLinkList;\n","import styled from '@emotion/styled';\n\nconst StyledSocialLintItem = styled.li`\n  a {\n    transform: rotate(10deg);\n    color: ${p =>\n      p.iconTheme === 'dark' ? p.theme.colors.dark : p.theme.colors.white};\n    transition: 0.7s;\n  }\n  svg {\n    transition: 0.7s;\n    &:hover {\n      transition: 0.7s;\n      cursor: pointer;\n      transform: scale(1.5);\n    }\n  }\n`;\n\nexport default StyledSocialLintItem;\n","import PropTypes from 'prop-types';\nimport React, { createElement } from 'react';\nimport StyledSocialLinkList from './styled-social-link-list';\nimport StyledSocialLinItem from './styled-social-link-item';\nimport useSiteMetadata from '@/hooks/use-site-metadata';\n\n/**\n *\n * @param name\n * @returns {*}\n */\nconst getIcon = name => require('react-icons/fa')[name];\n/**\n *\n * @param iconTheme\n * @returns {*}\n * @constructor\n */\nconst SocialLinkList = ({ iconTheme }) => {\n  const { authorSocialLinks } = useSiteMetadata();\n\n  return (\n    <StyledSocialLinkList>\n      {authorSocialLinks.map(social => (\n        <StyledSocialLinItem key={social.name} iconTheme={iconTheme}>\n          <a href={social.url.concat(social.nickname)} target=\"_blank\">\n            {createElement(getIcon(`Fa${social.name}`), { size: 24 })}\n          </a>\n        </StyledSocialLinItem>\n      ))}\n    </StyledSocialLinkList>\n  );\n};\n\nSocialLinkList.defaultProps = {\n  iconTheme: 'light',\n};\n\nSocialLinkList.propTypes = {\n  iconTheme: PropTypes.oneOf(['dark', 'light']),\n};\n\nexport default SocialLinkList;\n"],"sourceRoot":""}