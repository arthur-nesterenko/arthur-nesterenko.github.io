{"version":3,"sources":["webpack:///./src/components/heading.jsx","webpack:///./src/components/paragraph.jsx","webpack:///./src/components/blog-list/item/styled-article.jsx","webpack:///./src/components/blog-list/item/styled-header.jsx","webpack:///./src/components/blog-list/item/styled-meta.jsx","webpack:///./src/components/blog-list/item/index.jsx","webpack:///./src/components/blog-list/styled-list-container.jsx","webpack:///./src/components/blog-list/index.jsx","webpack:///./src/pages/blog.js"],"names":["Heading","p","css","theme","heading","variant","defaultProps","propTypes","PropTypes","oneOf","Paragraph","colors","dark","StyledArticle","StyledHeader","StyledMeta","ItemPropTypes","id","string","isRequired","fields","shape","slug","readingTime","text","excerpt","frontmatter","title","date","Item","style","marginBottom","key","fade","rel","to","StyledListContainer","BlogList","posts","map","node","centerText","blogPageQuery","BlogPage","edges","data","layout","length","float","href","target","aria-label","size"],"mappings":"4IAIMA,EAAO,uCACT,SAAAC,GAAC,OAAIC,WAAJ,CAAQD,EAAEE,MAAMC,QAAQH,EAAEI,YADlB,KAIbL,EAAQM,aAAe,CACrBD,QAAS,QAEXL,EAAQO,UAAY,CAClBF,QAASG,IAAUC,MAAM,CAAC,UAAW,YAAa,UAGrCT,O,sJCRAU,EALA,gDACJ,SAAAT,GAAC,OAAIA,EAAEE,MAAMQ,OAAOC,OADhB,oBCIAC,EAJI,0FCMJC,EANG,gICcHC,EAdC,mL,iCCyBHC,EAAgB,CAC3BC,GAAIT,IAAUU,OAAOC,WACrBC,OAAQZ,IAAUa,MAAM,CACtBC,KAAMd,IAAUU,OAAOC,WACvBI,YAAaf,IAAUa,MAAM,CAC3BG,KAAMhB,IAAUU,WAGpBO,QAASjB,IAAUU,OACnBQ,YAAalB,IAAUa,MAAM,CAC3BM,MAAOnB,IAAUU,OAAOC,WACxBS,KAAMpB,IAAUU,UAQLW,EArCF,SAAC,GAA0C,IAAxCZ,EAAuC,EAAvCA,GAAIS,EAAmC,EAAnCA,YAAaD,EAAsB,EAAtBA,QAASL,EAAa,EAAbA,OACxC,OACE,YAAC,EAAD,CAAeU,MAAO,CAAEC,aAAc,IAAMC,IAAKf,GAC/C,YAAC,EAAD,KACE,YAAC,IAAD,CAASZ,QAAS,WAChB,YAAC,IAAD,CAAS4B,MAAI,EAACC,IAAI,WAAWC,GAAE,QAAUf,EAAOE,MAC7CI,EAAYC,QAGjB,YAAC,EAAD,KACE,0BAASD,EAAYE,MADvB,IACsC,qBAAIR,EAAOG,YAAYC,QAG/D,YAAC,EAAD,KAAYC,KCfHW,EALU,mG,+MCcjB5B,IAAUa,MAAML,GAXxB,IAkBeqB,EAlBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,YAAC,EAAD,KACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,YAAC,EAAD,GAAMR,IAAKQ,EAAKvB,IAAQuB,S,YCRhC,8CASA,IAAMC,EAAU,4CA4CHC,EAAa,aA4BXC,UApEE,SAAC,GAIX,IAFMC,EAEP,EAHJC,KACEP,MAASM,MAGX,OACE,YAAC,IAAD,CAAYE,OAAO,SACjB,YAAC,IAAD,CAAKnB,MAAM,SACX,YAAC,IAAD,KACoB,IAAjBiB,EAAMG,OACL,kBAAI7C,IAAKuC,GAAT,mCAEA,YAAC,WAAD,KACE,YAAC,EAAD,CAAUH,MAAOM,IACjB,mBAAKd,MAAO,CAAEkB,MAAO,UACnB,iBACEC,KAAK,WACLC,OAAO,SACPhB,IAAI,sBACJP,MAAM,MACNwB,aAAW,OAEX,YAAC,QAAD,CAAOC,KAAM","file":"component---src-pages-blog-js-801b3dd45a6d9558da7e.js","sourcesContent":["import PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nconst Heading = styled.h1`\n  ${p => css(p.theme.heading[p.variant])};\n`;\n\nHeading.defaultProps = {\n  variant: 'dark',\n};\nHeading.propTypes = {\n  variant: PropTypes.oneOf(['primary', 'secondary', 'dark']),\n};\n\nexport default Heading;\n","import styled from '@emotion/styled';\n\nconst Paragraph = styled.p`\n  color: ${p => p.theme.colors.dark};\n  padding: 10px 0;\n`;\n\nexport default Paragraph;\n","import styled from '@emotion/styled';\n\nconst StyledArticle = styled.article`\n  margin-bottom: 50px;\n`;\n\nexport default StyledArticle;\n","import styled from '@emotion/styled';\n\nconst StyledHeader = styled.header`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport default StyledHeader;\n","import styled from '@emotion/styled';\n\nconst StyledMeta = styled.small`\n  display: flex;\n  flex-direction: row;\n\n  strong {\n    font-weight: 900;\n    margin-right: 5px;\n  }\n  i {\n    margin-left: 5px;\n    font-style: italic;\n  }\n`;\n\nexport default StyledMeta;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Heading from '@/components/heading';\nimport Paragraph from '@/components/paragraph';\nimport StyledArticle from './styled-article';\nimport StyledHeader from './styled-header';\nimport StyledMeta from './styled-meta';\nimport AniLink from 'gatsby-plugin-transition-link/AniLink';\n\nconst Item = ({ id, frontmatter, excerpt, fields }) => {\n  return (\n    <StyledArticle style={{ marginBottom: 50 }} key={id}>\n      <StyledHeader>\n        <Heading variant={'primary'}>\n          <AniLink fade rel=\"bookmark\" to={`/blog${fields.slug}`}>\n            {frontmatter.title}\n          </AniLink>\n        </Heading>\n        <StyledMeta>\n          <strong>{frontmatter.date}</strong>‚Ä¢<i>{fields.readingTime.text}</i>\n        </StyledMeta>\n      </StyledHeader>\n      <Paragraph>{excerpt}</Paragraph>\n    </StyledArticle>\n  );\n};\n\nexport const ItemPropTypes = {\n  id: PropTypes.string.isRequired,\n  fields: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    readingTime: PropTypes.shape({\n      text: PropTypes.string,\n    }),\n  }),\n  excerpt: PropTypes.string,\n  frontmatter: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    date: PropTypes.string,\n  }),\n};\n\nItem.propTypes = {\n  ...ItemPropTypes,\n};\n\nexport default Item;\n","import styled from '@emotion/styled';\n\nconst StyledListContainer = styled.div`\n  padding: 100px 0;\n  min-height: 250px;\n`;\n\nexport default StyledListContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Item, { ItemPropTypes } from './item';\nimport StyledListContainer from './styled-list-container';\n\nconst BlogList = ({ posts }) => {\n  return (\n    <StyledListContainer>\n      {posts.map(({ node }) => (\n        <Item key={node.id} {...node} />\n      ))}\n    </StyledListContainer>\n  );\n};\n\nexport const blogPostPropTypes = {\n  node: PropTypes.shape(ItemPropTypes),\n};\n\nBlogList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.shape(blogPostPropTypes)),\n};\n\nexport default BlogList;\n","import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { graphql } from 'gatsby';\nimport Seo from '../components/seo';\nimport PageLayout from '@/layouts/page-layout';\nimport Container from '@/components/container';\nimport BlogList, { blogPostPropTypes } from '@/components/blog-list';\nimport { FaRss } from 'react-icons/fa';\nimport { css } from '@emotion/core';\n\nconst centerText = css`\n  text-align: center;\n`;\n\nconst BlogPage = ({\n  data: {\n    posts: { edges },\n  },\n}) => {\n  return (\n    <PageLayout layout=\"white\">\n      <Seo title=\"Blog\" />\n      <Container>\n        {edges.length === 0 ? (\n          <h1 css={centerText}>There are no posts yet ü§∑üèª‚Äç‚ôÇÔ∏è </h1>\n        ) : (\n          <Fragment>\n            <BlogList posts={edges} />\n            <div style={{ float: 'right' }}>\n              <a\n                href=\"/rss.xml\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                title=\"rss\"\n                aria-label=\"rss\"\n              >\n                <FaRss size={24} />\n              </a>\n            </div>\n          </Fragment>\n        )}\n      </Container>\n    </PageLayout>\n  );\n};\n\nBlogPage.propTypes = {\n  data: PropTypes.shape({\n    posts: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.shape(blogPostPropTypes)),\n    }),\n  }),\n};\n\nexport const blogPageQuery = graphql`\n  query BlogPageQuery {\n    posts: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"//posts//\" }\n        frontmatter: { status: { ne: \"draft\" } }\n      }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt(truncate: true, format: PLAIN)\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogPage;\n"],"sourceRoot":""}